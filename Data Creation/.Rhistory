library(tidyverse); library(ggthemes); library(viridis); library(stringr)
rm(list = ls())
rm(list = ls())
library(tidyverse); library(readxl)
##Load the excel file with the data
rowLabelData <- read_csv("raw data/interventionTypes.csv")
colLabelData <- read_csv("raw data/jobTypes.csv")
appData <- read_excel("raw data/V8_Jobs_M-E_Portfolio_Outputs_All_Vismay_CF Plus Keywords_For Visualization_05-23-17.xlsx", sheet = 3, skip = 2)
countData <- appData %>%
select(1:23, 230:242) %>%
filter(Proj.Status != "Closed" & !is.na(Intervention)) %>%
gather(key = subColLabel, value = count, 25:36) %>%
filter(!is.na(count)) %>%
mutate(count = 1)
moneyData <- appData %>%
select(1:23, 230, 264:275) %>%
filter(Proj.Status != "Closed" & !is.na(Intervention)) %>%
gather(key = subColLabel, value = money, 25:36) %>%
rowwise() %>%
mutate(subColLabel = str_replace(subColLabel, "__2", "")) %>%
select(Proj.ID, Intervention, subColLabel, money)
rm(list = ls())
library(tidyverse); library(readxl)
##Load the excel file with the data
rowLabelData <- read_csv("raw data/interventionTypes.csv")
colLabelData <- read_csv("raw data/jobTypes.csv")
appData <- read_excel("raw data/V8_Jobs_M-E_Portfolio_Outputs_All_Vismay_CF Plus Keywords_For Visualization_05-23-17.xlsx", sheet = 3, skip = 2)
##Get the count and money data in long format
countData <- appData %>%
select(1:23, 230:242) %>%
filter(Proj.Status != "Closed" & !is.na(Intervention)) %>%
gather(key = subColLabel, value = count, 25:36) %>%
filter(!is.na(count)) %>%
mutate(count = 1)
View(countData)
moneyData <- appData %>%
select(1:23, 230, 264:275) %>%
filter(Proj.Status != "Closed" & !is.na(Intervention)) %>%
gather(key = subColLabel, value = money, 25:36) %>%
rowwise() %>%
mutate(subColLabel = str_replace(subColLabel, "__2", "")) %>%
select(Proj.ID, Intervention, subColLabel, money)
View(moneyData)
moneyData <- appData %>%
select(1:23, 230, 264:275) %>%
filter(Proj.Status != "Closed" & !is.na(Intervention)) %>%
gather(key = subColLabel, value = money, 25:36) %>%
rowwise() %>%
mutate(subColLabel = str_replace(subColLabel, "__2|__1", "")) %>%
select(Proj.ID, Intervention, subColLabel, money)
View(appData)
names(appData)
rm(list = ls())
library(tidyverse); library(readxl)
##Load the excel file with the data
rowLabelData <- read_csv("raw data/interventionTypes.csv")
colLabelData <- read_csv("raw data/jobTypes.csv")
appData <- read_excel("raw data/V8_Jobs_M-E_Portfolio_Outputs_All_Vismay_CF Plus Keywords_For Visualization_05-23-17.xlsx", sheet = 3, skip = 2)
##Get the count and money data in long format
countData <- appData %>%
select(1:23, 230:242) %>%
filter(Proj.Status != "Closed" & !is.na(Intervention)) %>%
gather(key = subColLabel, value = count, 25:36) %>%
filter(!is.na(count)) %>%
mutate(count = 1)
moneyData <- appData %>%
select(1:23, 230, 264:275) %>%
filter(Proj.Status != "Closed" & !is.na(Intervention)) %>%
gather(key = subColLabel, value = money, 25:36) %>%
rowwise() %>%
mutate(subColLabel = str_replace(subColLabel, "__2|__1", "")) %>%
select(Proj.ID, Intervention, subColLabel, money)
appData <- left_join(countData, moneyData, by = c("Proj.ID", "Intervention", "subColLabel")) %>%
left_join(., colLabelData, by = c("subColLabel" = "subColLabel")) %>%
left_join(., rowLabelData, by = c("Intervention" = "subRowLabel")) %>%
mutate(money = ifelse(is.na(money), 0, money))
names(appData)
names(appData) <- c("projId", "projName", "cluster", "gP", "projType", "projFY", "projApproval", "projRegion", "projCountry", "countryClassification", "IBRDCommit", "IDACommit", "totalCommit", "projProductLineKey", "projProductLine", "projOutputKey", "projOutputType", "projStatus", "projContribGPs", "projCCSA", "objective", "description", "projURL", "subRowLabel", "subColLabel", "count", "money","mainColLabel", "mainRowLabel")
appData <- appData %>%
arrange(projId) %>%
ungroup() %>%
mutate(subColLabel = ifelse(subColLabel == "Entrepreneurs/self-employed", "Entrepreneurs/ self-employed", subColLabel))
write_csv(appData, "../data/appData.csv")
summary(appData$money)
##Load the data and select vars of interest
# projectData <- read_csv("raw data/jobsData.csv") %>%
#         select(Proj.ID, 4, Proj.Type, Proj.FY, Proj.Region, Proj.Country, 10, Proj.Product_Line, Proj.Status, 227:243)
#
# projectData <- projectData %>%
#         filter(Proj.Status != "Closed" & !is.na(Intervention)) %>% ##Filter out projects that miss intervention tags and those that are either active or in the pipeline
#         gather(key = jobsName, value = value, 11:26) %>% ##convert to long format
#         left_join(., read_csv("raw data/interventionTypes.csv"), by = c("Intervention")) %>%
#         left_join(., read_csv("raw data/jobTypes.csv"), by = c("jobsName"))
#
# ## Change var names
# names(projectData) <- c("id", "gP", "projType", "fY", "region", "country", "countryType", "productLine", "status", "intervention", "jobsName", "value", "interventionType", "jobsType")
##Filter those rows that are marked a yes (since we are only interested in the counts of yes for each cell)
# projectData <- projectData %>%
#         filter(!is.na(value))
#
# ##Change Macro-economic conditions to Macro-level: Economic Conditions (so that it matches the template of the rest)
# projectData <- projectData %>%
#         mutate(interventionType = ifelse(interventionType == "Macro-economic conditions", "Macro-level: Economic Conditions", interventionType))
View(appData)
